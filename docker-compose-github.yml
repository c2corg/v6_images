# A compose file for github actions
version: '3'
services:
  wsgi:
    container_name: c2corg_images_test
    image: c2corg/v6_images:test
    environment:
      STORAGE_BACKEND: local

      TEMP_FOLDER: /tmp/temp

      API_SECRET_KEY: good_secret

      INCOMING_BUCKET: incoming
      ACTIVE_BUCKET: active

      INCOMING_FOLDER: /tmp/incoming
      ACTIVE_FOLDER: /tmp/active

      INCOMING_PREFIX: MINIO
      ACTIVE_PREFIX: MINIO
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY_ID: minio
      MINIO_SECRET_KEY: miniosecret

      S3_SIGNATURE_VERSION: s3v4

      ROUTE_PREFIX: /

      AUTO_ORIENT_ORIGINAL: 1

      GUNICORN_PARAMS: "-b :8080 --worker-class gthread --threads 10 --workers 5 --access-logfile - --log-level debug"
      C2CWSGI_LOG_LEVEL: DEBUG
      C2CORG_IMAGES_LOG_LEVEL: DEBUG
    cap_add:
      - NET_BIND_SERVICE
    ports:
      - 8080:8080
    links:
      - minio

  minio:
    image: minio/minio
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: miniosecret
    command:
      - server
      - /data
    volumes:
      - ./data:/data:rw
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost/minio/health/live']
      interval: 10s
      timeout: 10s
      retries: 3

  # minio has dropped existing folder support
  # We use mc to create the buckets and set anonymous access policy
  initbuckets:
    image: minio/mc
    depends_on:
      - minio
    links:
      - minio
    cap_add:
      - NET_BIND_SERVICE
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minio miniosecret;
      /usr/bin/mc mb myminio/active;
      /usr/bin/mc mb myminio/incoming;
      /usr/bin/mc anonymous set download myminio/active;
      /usr/bin/mc anonymous set none myminio/incoming;
      exit 0;
      "